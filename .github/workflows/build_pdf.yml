name: LaTeX Book PDF CI/CD
on:
  push:
    branches:
      - main
    paths-ignore:
      - '.gitignore'
      - 'README.md'
      - '.github/workflows/*'
      
permissions:
  contents: write
  pages: write
  id-token: write
  issues: write

jobs:
  build_and_commit:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Cache LaTeX packages
      uses: actions/cache@v4
      with:
        path: /usr/share/texlive
        key: texlive-${{ runner.os }}-${{ hashFiles('**/Dockerfile') }}
        restore-keys: |
          texlive-${{ runner.os }}-

    - name: Install LaTeX
      run: |
        sudo apt-get update
        sudo apt-get install -y texlive-xetex texlive-fonts-recommended texlive-fonts-extra fonts-jetbrains-mono
    
    - name: Compile LaTeX
      id: compile
      run: |
        xelatex -interaction=nonstopmode book.tex
        while grep -q "Rerun to get" book.log; do
          xelatex -interaction=nonstopmode book.tex
        done
      continue-on-error: true

    - name: Upload LaTeX log
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: latex-logs
        path: book.log

    - name: Check for compilation errors
      if: always()
      run: |
        if grep -q "Fatal error" book.log; then
          echo "LaTeX compilation failed!"
          exit 1
        fi

    - name: Upload PDF as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: compiled-book-pdf
        path: book.pdf

    - name: Create pages folder
      run: mkdir -p book && cp book.pdf book/

    - name: Upload Pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: 'book'

    - name: Deploy to GitHub Pages
      uses: actions/deploy-pages@v4

    - name: Create Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: book.pdf
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create Success Notification
      if: success()
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'Build Successful',
            body: `PDF compiled and deployed to Pages\n\nCommit: ${context.sha}`
          })

    - name: Create Failure Notification
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'Build Failed',
            body: `LaTeX compilation failed\n\nCommit: ${context.sha}\n\n[View logs in Actions](https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})`
          })